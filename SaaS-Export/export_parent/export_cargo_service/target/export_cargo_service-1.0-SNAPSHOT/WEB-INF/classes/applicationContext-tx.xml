<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--包扫描：开启注解支持-->
    <context:component-scan base-package="com.itheima.service"/>

    <!--配置事务-->
    <!--1.事务管理器-->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--2.事务通知(拦截到指定的方式时候，通过事务通知规则告诉spring对这些方法如何管理事务)-->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--find等开头的方法；运行时期事务可有可无； 支持只读操作-->
            <tx:method name="find*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="load*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="search*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="query*" propagation="SUPPORTS" read-only="true"/>
            <tx:method name="get*" propagation="SUPPORTS" read-only="true"/>
            <!--其他所有方法；运行时期必须有事务； 支持crud操作 (放到最后)-->
            <tx:method name="*" propagation="REQUIRED" read-only="false"/>
        </tx:attributes>
    </tx:advice>
    <!--3.aop配置 = 切入点表达式 + 建立切入点表达式与事务通知规则的关系-->
    <aop:config>

        <!--<aop:pointcut id="pt" expression="execution(* cn.itcast.service.*.impl.*.*(..))"></aop:pointcut>-->

        <!--对容器中所有以ServiceImpl结尾的类，自动生成代理对象。(拦截的是类的所有方法)-->
        <aop:pointcut id="pt" expression="bean(*ServiceImpl)"/>

        <aop:advisor pointcut-ref="pt" advice-ref="txAdvice" ></aop:advisor>
    </aop:config>

</beans>