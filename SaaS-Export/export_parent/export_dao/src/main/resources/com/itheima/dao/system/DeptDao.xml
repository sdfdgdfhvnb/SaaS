<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.itheima.dao.system.DeptDao">

    <!--建立查询列与对象属性对应关系-->
    <resultMap id="BaseResultMap" type="com.itheima.domain.system.Dept">
        <result column="dept_id" property="id"/>
        <result column="dept_name" property="deptName"/>
        <result column="state" property="state"/>
        <result column="company_id" property="companyId"/>
        <result column="company_name" property="companyName"/>

        <!--
            association 一对一关联查询映射
                property 对应对象的属性
                column   表示对象映射到表对应的外键字段； 还可以自动作为select对应的查询语句的参数。
                javaType 对象属性的类型
                select   对应查询语句，根据部门id查询，把查询的结果赋值给parent父部门
        -->
        <association property="parent"
                     column="parent_id"
                     javaType="com.itheima.domain.system.Dept"
                     select="com.itheima.dao.system.DeptDao.findById"/>

    </resultMap>

    <!--查询全部部门(根据企业id查询)-->
    <select id="findAll" resultMap="BaseResultMap">
        select * from pe_dept where company_id=#{companyId}
    </select>

    <!--根据id查询部门-->
    <select id="findById" resultMap="BaseResultMap">
        select * from pe_dept where dept_id=#{id}
    </select>

    <!--添加部门-->
    <insert id="save">
        insert into pe_dept(dept_id,dept_name,parent_id,state,company_id,company_name)
        values(#{id},#{deptName},
        <choose>
            <when test="parent != null and parent.id != '' and parent.id != null">
                #{parent.id},
            </when>
            <otherwise>NULL,</otherwise>
        </choose>
        #{state},#{companyId},#{companyName})
    </insert>

    <!--修改部门-->
    <update id="update">
        update pe_dept
        set
        dept_name=#{deptName},
        parent_id=
        <choose>
            <when test="parent != null and parent.id != '' and parent.id != null">
                #{parent.id},
            </when>
            <otherwise>NULL,</otherwise>
        </choose>
        state=#{state},company_id=#{companyId},company_name=#{companyName}
        where dept_id=#{id}
    </update>

    <!--查询子部门-->
    <select id="findByParentId" resultMap="BaseResultMap">
        SELECT * FROM pe_dept WHERE parent_id=#{parentId}
    </select>

    <!--根据部门id删除部门-->
    <delete id="delete">
        DELETE FROM pe_dept WHERE dept_id=#{id}
    </delete>

</mapper>